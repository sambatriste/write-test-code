* テストコード書いていますか？

JUnitが使われはじめた00年代には、テストコードを書くことのコストがペイするのかという議論が、
現場でもよくされていました。

しかし、テストを書くことの意義は、単に回帰テストのコストだけで議論すべきことではありません。

現在、テストは他の技術や手法と深く関連しており、
テストコードが無い/書かないことは、新しい技術を取り入れることを阻害する
要因になってしまいます。

例えば、DevOpsはCI(継続的インテグレーション)やCD(継続的デリバリー)の
延長線上にありますが、そもそもテストがなければCIは実現できません。
また、テストコードが無い状態でリファクタリングすることは現実的でなく、
リファクタリングができなければ、変化に対応することができず、
真にアジャイルである(Be Agile)こともできないでしょう。

一方で、今でも、
「昔に作られたシステムを保守しているが、テストコードがない」
「PJでテストコードを書こうとしたが定着しなかった」
という声も聞きます。

テストでお悩みの皆様とともに、どうやって
テストを書くことを定着させていくかを考えてみたいと思います。

- なぜテストコードを書く必要があるのか
- テストコードの書きかた入門編
- こんなときどうテストするか
- 現場にどうやってテストを持ち込むか