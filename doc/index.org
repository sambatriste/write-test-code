# -*- mode: org; coding: utf-8-unix -*-

#+TITLE: テスト書こう

#+OPTIONS: toc:0
#+OPTIONS: reveal_single_file:t
#+REVEAL_EXTRA_CSS: ~/.emacs.d/lib/reveal.js/mystyle.css


* なぜテストコードを書く必要があるのか

#+INCLUDE: "./why-write-test.org"

* テストコードの書きかた入門編

#+INCLUDE: "./how-to-write-test.org"

* こんなときどうテストするか

#+INCLUDE: "./case-study.org"

* ☆現場にどうやってテストを持ち込むか

見積もりに予め含めておく

失敗例
- ☆委託先にまかせきりでコード品質にバラツキ
- (当時CI環境が整備されてなかった)

テストコードは資産なのでレビュー必要

** 新規プロジェクトの場合


** ☆既存プロジェクトの場合

☆ここ興味強いかも


- テストがないのでリファクタリングできない
- リファクタリングできないのでテストができない

レガシーコード改善ガイドのテクニック紹介

*** スプラウトクラス/スプラウトメソッド


*** 仕様化テスト

** ステークホルダーを説得する方法

- たいしてコストが掛からないことを主張する
  - コスパがよい箇所を抽出してテストとする
  - 最初から無理に全てをテスト対象としない

- 計画、見積もりをする
- 品質評価に使えることを主張する
  - カバレッジ

- 部門、メンバーの成長に必要であることを主張する
  - メンバーが成長できないとモチベーションが維持できない
  - このままでは新しい取り組みもできない


** カバレッジ

- 取り方
  - 操作方法
  - 原理
- C0/C1



